{"title":"Runtime(七) Category","date":"2019-07-03T06:49:18.000Z","slug":"iOS-runtime-node-7","comments":true,"tags":["Runtime"],"categories":["iOS"],"updated":"2019-07-10T03:35:32.000Z","content":"<h2 id=\"Category\">Category<a href=\"post/iOS-runtime-node-7#Category\"></a></h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef struct category_t *Category;</span><br></pre></td></tr></table></figure>\n<p>在<code>objc-private.h</code>中定义了<code>Category</code>，再看一下具体的结构</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">struct category_t &#123;</span><br><span class=\"line\">    const char *name;</span><br><span class=\"line\">    classref_t cls;</span><br><span class=\"line\">    struct method_list_t *instanceMethods;</span><br><span class=\"line\">    struct method_list_t *classMethods;</span><br><span class=\"line\">    struct protocol_list_t *protocols;</span><br><span class=\"line\">    struct property_list_t *instanceProperties;</span><br><span class=\"line\">    // Fields below this point are not always present on disk.</span><br><span class=\"line\">    struct property_list_t *_classProperties;</span><br><span class=\"line\"></span><br><span class=\"line\">    method_list_t *methodsForMeta(bool isMeta) &#123;</span><br><span class=\"line\">        if (isMeta) return classMethods;</span><br><span class=\"line\">        else return instanceMethods;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    property_list_t *propertiesForMeta(bool isMeta, struct header_info *hi);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>从这个结构体中，我们可以看到它包含了<code>instanceMethods</code>对象方法，<code>classMethods</code>类方法，<code>protocols</code>协议，<code>instanceProperties</code>对象属性，但是其中却并没有成员变量，因此我们在分类中声明属性，其实并没有给我们生成对应的成员变量，仅仅只给我们生成了<code>getter setter</code>方法。所以分类中是不允许添加成员变量的（当然我们可以通过<code>objc_setAssociatedObject</code>关联对象，这个另说）。</p>\n<p>我们知道实例对象的方法是存在类对象的方法列表中的，而类对象的方法是存在元类对象的方法类表中的，而在<code>category_t</code>结构体中我们看到分类的方法是存在<code>category_t</code>结构体中的，那我们调用分类方法时又是如何找到对应的方法并执行的呢？<code>Category</code>又是如何被加载的呢？</p>\n<h3 id=\"map-images\">map_images<a href=\"post/iOS-runtime-node-7#map-images\"></a></h3><p>我们先找到<code>runtime</code>初始化的入口<code>_objc_init()</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void _objc_init(void)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    static bool initialized = false;</span><br><span class=\"line\">    if (initialized) return;</span><br><span class=\"line\">    initialized = true;</span><br><span class=\"line\">    </span><br><span class=\"line\">    // fixme defer initialization until an objc-using image is found?</span><br><span class=\"line\">    environ_init();</span><br><span class=\"line\">    tls_init();</span><br><span class=\"line\">    static_init();</span><br><span class=\"line\">    lock_init();</span><br><span class=\"line\">    exception_init();</span><br><span class=\"line\"></span><br><span class=\"line\">    _dyld_objc_notify_register(&amp;map_images, load_images, unmap_image);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在<code>runtime</code>被加载时，会调用<code>_objc_init()</code>并在内部注册三个函数指针。其中<code>map_images</code>就是初始化的关键函数，完成了<code>Runtime</code>环境的初始化</p>\n<p>在<code>map_images</code>中调用了<code>map_images_nolock()</code>方法</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void</span><br><span class=\"line\">map_images(unsigned count, const char * const paths[],</span><br><span class=\"line\">           const struct mach_header * const mhdrs[])</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    mutex_locker_t lock(runtimeLock);</span><br><span class=\"line\">    return map_images_nolock(count, paths, mhdrs);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>map_images_nolock()</code>最终调用了<code>_read_images()</code>方法，也就是初始化的核心</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">void</span> _read_images(header_info **hList, uint32_t hCount, <span class=\"keyword\">int</span> totalClasses, <span class=\"keyword\">int</span> unoptimizedTotalClasses)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    header_info *hi;</span><br><span class=\"line\">    uint32_t hIndex;</span><br><span class=\"line\">    size_t count;</span><br><span class=\"line\">    size_t i;</span><br><span class=\"line\">    Class *resolvedFutureClasses = <span class=\"literal\">nil</span>;</span><br><span class=\"line\">    size_t resolvedFutureClassCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> doneOnce;</span><br><span class=\"line\">    TimeLogger ts(PrintImageTimes);</span><br><span class=\"line\"></span><br><span class=\"line\">    runtimeLock.assertLocked();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#define EACH_HEADER \\</span></span><br><span class=\"line\">    hIndex = <span class=\"number\">0</span>;         \\</span><br><span class=\"line\">    hIndex &lt; hCount &amp;&amp; (hi = hList[hIndex]); \\</span><br><span class=\"line\">    hIndex++</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!doneOnce) &#123;</span><br><span class=\"line\">        doneOnce = <span class=\"literal\">YES</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#if SUPPORT_NONPOINTER_ISA</span></span><br><span class=\"line\">        <span class=\"comment\">// Disable non-pointer isa under some conditions.</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># if SUPPORT_INDEXED_ISA</span></span><br><span class=\"line\">        <span class=\"comment\">// Disable nonpointer isa if any image contains old Swift code</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (hi-&gt;info()-&gt;containsSwift()  &amp;&amp;</span><br><span class=\"line\">                hi-&gt;info()-&gt;swiftVersion() &lt; objc_image_info::SwiftVersion3)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                DisableNonpointerIsa = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (PrintRawIsa) &#123;</span><br><span class=\"line\">                    _objc_inform(<span class=\"string\">\"RAW ISA: disabling non-pointer isa because \"</span></span><br><span class=\"line\">                                 <span class=\"string\">\"the app or a framework contains Swift code \"</span></span><br><span class=\"line\">                                 <span class=\"string\">\"older than Swift 3.0\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"meta\"># endif</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"># if TARGET_OS_OSX</span></span><br><span class=\"line\">        <span class=\"comment\">// Disable non-pointer isa if the app is too old</span></span><br><span class=\"line\">        <span class=\"comment\">// (linked before OS X 10.11)</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (dyld_get_program_sdk_version() &lt; DYLD_MACOSX_VERSION_10_11) &#123;</span><br><span class=\"line\">            DisableNonpointerIsa = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (PrintRawIsa) &#123;</span><br><span class=\"line\">                _objc_inform(<span class=\"string\">\"RAW ISA: disabling non-pointer isa because \"</span></span><br><span class=\"line\">                             <span class=\"string\">\"the app is too old (SDK version \"</span> SDK_FORMAT <span class=\"string\">\")\"</span>,</span><br><span class=\"line\">                             FORMAT_SDK(dyld_get_program_sdk_version()));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// Disable non-pointer isa if the app has a __DATA,__objc_rawisa section</span></span><br><span class=\"line\">        <span class=\"comment\">// New apps that load old extensions may need this.</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (hi-&gt;mhdr()-&gt;filetype != MH_EXECUTE) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            <span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> size;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (getsectiondata(hi-&gt;mhdr(), <span class=\"string\">\"__DATA\"</span>, <span class=\"string\">\"__objc_rawisa\"</span>, &amp;size)) &#123;</span><br><span class=\"line\">                DisableNonpointerIsa = <span class=\"literal\">true</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (PrintRawIsa) &#123;</span><br><span class=\"line\">                    _objc_inform(<span class=\"string\">\"RAW ISA: disabling non-pointer isa because \"</span></span><br><span class=\"line\">                                 <span class=\"string\">\"the app has a __DATA,__objc_rawisa section\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;  <span class=\"comment\">// assume only one MH_EXECUTE image</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"meta\"># endif</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#endif</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (DisableTaggedPointers) &#123;</span><br><span class=\"line\">            disableTaggedPointers();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        initializeTaggedPointerObfuscator();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (PrintConnecting) &#123;</span><br><span class=\"line\">            _objc_inform(<span class=\"string\">\"CLASS: found %d classes during launch\"</span>, totalClasses);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// namedClasses</span></span><br><span class=\"line\">        <span class=\"comment\">// Preoptimized classes don't go in this table.</span></span><br><span class=\"line\">        <span class=\"comment\">// 4/3 is NXMapTable's load factor</span></span><br><span class=\"line\">        <span class=\"comment\">// 类对象大小</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> namedClassesSize = </span><br><span class=\"line\">            (isPreoptimized() ? unoptimizedTotalClasses : totalClasses) * <span class=\"number\">4</span> / <span class=\"number\">3</span>;</span><br><span class=\"line\">        gdb_objc_realized_classes =</span><br><span class=\"line\">            NXCreateMapTable(NXStrValueMapPrototype, namedClassesSize);</span><br><span class=\"line\">        <span class=\"comment\">// 实例化类的哈希表</span></span><br><span class=\"line\">        allocatedClasses = NXCreateHashTable(NXPtrPrototype, <span class=\"number\">0</span>, <span class=\"literal\">nil</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        ts.log(<span class=\"string\">\"IMAGE TIMES: first time tasks\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Discover classes. Fix up unresolved future classes. Mark bundle classes.</span></span><br><span class=\"line\">    <span class=\"comment\">// 读取所有类，对其进行实例化分配内存空间。并标记加载类</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">        classref_t *classlist = _getObjc2ClassList(hi, &amp;count);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (! mustReadClasses(hi)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// Image is sufficiently optimized that we need not call readClass()</span></span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">bool</span> headerIsBundle = hi-&gt;isBundle();</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> headerIsPreoptimized = hi-&gt;isPreoptimized();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">            Class cls = (Class)classlist[i];</span><br><span class=\"line\">            <span class=\"comment\">// 通过readClass处理类获得新类，其内部主要是ro-&gt;rw</span></span><br><span class=\"line\">            Class newCls = readClass(cls, headerIsBundle, headerIsPreoptimized);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (newCls != cls  &amp;&amp;  newCls) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// Class was moved but not deleted. Currently this occurs </span></span><br><span class=\"line\">                <span class=\"comment\">// only when the new class resolved a future class.</span></span><br><span class=\"line\">                <span class=\"comment\">// Non-lazily realize the class below.</span></span><br><span class=\"line\">                resolvedFutureClasses = (Class *)</span><br><span class=\"line\">                    realloc(resolvedFutureClasses, </span><br><span class=\"line\">                            (resolvedFutureClassCount+<span class=\"number\">1</span>) * <span class=\"keyword\">sizeof</span>(Class));</span><br><span class=\"line\">                resolvedFutureClasses[resolvedFutureClassCount++] = newCls;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ts.log(<span class=\"string\">\"IMAGE TIMES: discover classes\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Fix up remapped classes</span></span><br><span class=\"line\">    <span class=\"comment\">// Class list and nonlazy class list remain unremapped.</span></span><br><span class=\"line\">    <span class=\"comment\">// Class refs and super refs are remapped for message dispatching.</span></span><br><span class=\"line\">    <span class=\"comment\">// 将未映射Class重映射</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!noClassesRemapped()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">            Class *classrefs = _getObjc2ClassRefs(hi, &amp;count);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">                remapClassRef(&amp;classrefs[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// fixme why doesn't test future1 catch the absence of this?</span></span><br><span class=\"line\">            classrefs = _getObjc2SuperRefs(hi, &amp;count);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">                remapClassRef(&amp;classrefs[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ts.log(<span class=\"string\">\"IMAGE TIMES: remap classes\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Fix up @selector references</span></span><br><span class=\"line\">    <span class=\"comment\">// 注册所有的SEL</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> size_t UnfixedSelectors;</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        mutex_locker_t lock(selLock);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (hi-&gt;isPreoptimized()) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"keyword\">bool</span> isBundle = hi-&gt;isBundle();</span><br><span class=\"line\">            SEL *sels = _getObjc2SelectorRefs(hi, &amp;count);</span><br><span class=\"line\">            UnfixedSelectors += count;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *name = sel_cname(sels[i]);</span><br><span class=\"line\">                sels[i] = sel_registerNameNoLock(name, isBundle);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ts.log(<span class=\"string\">\"IMAGE TIMES: fix up selector references\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#if SUPPORT_FIXUP</span></span><br><span class=\"line\">    <span class=\"comment\">// Fix up old objc_msgSend_fixup call sites</span></span><br><span class=\"line\">    <span class=\"comment\">// 修复旧函数指针调用遗留</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">        message_ref_t *refs = _getObjc2MessageRefs(hi, &amp;count);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (count == <span class=\"number\">0</span>) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (PrintVtables) &#123;</span><br><span class=\"line\">            _objc_inform(<span class=\"string\">\"VTABLES: repairing %zu unsupported vtable dispatch \"</span></span><br><span class=\"line\">                         <span class=\"string\">\"call sites in %s\"</span>, count, hi-&gt;fname());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">            fixupMessageRef(refs+i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ts.log(<span class=\"string\">\"IMAGE TIMES: fix up objc_msgSend_fixup\"</span>);</span><br><span class=\"line\"><span class=\"meta\">#endif</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Discover protocols. Fix up protocol refs.</span></span><br><span class=\"line\">    <span class=\"comment\">// 加载所有的协议</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">extern</span> objc_class OBJC_CLASS_$_Protocol;</span><br><span class=\"line\">        Class cls = (Class)&amp;OBJC_CLASS_$_Protocol;</span><br><span class=\"line\">        assert(cls);</span><br><span class=\"line\">        NXMapTable *protocol_map = protocols();</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> isPreoptimized = hi-&gt;isPreoptimized();</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> isBundle = hi-&gt;isBundle();</span><br><span class=\"line\"></span><br><span class=\"line\">        protocol_t **protolist = _getObjc2ProtocolList(hi, &amp;count);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">            readProtocol(protolist[i], cls, protocol_map, </span><br><span class=\"line\">                         isPreoptimized, isBundle);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ts.log(<span class=\"string\">\"IMAGE TIMES: discover protocols\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Fix up @protocol references</span></span><br><span class=\"line\">    <span class=\"comment\">// Preoptimized images may have the right </span></span><br><span class=\"line\">    <span class=\"comment\">// answer already but we don't know for sure.</span></span><br><span class=\"line\">    <span class=\"comment\">// 修复协议列表引用</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">        protocol_t **protolist = _getObjc2ProtocolRefs(hi, &amp;count);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">            remapProtocolRef(&amp;protolist[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ts.log(<span class=\"string\">\"IMAGE TIMES: fix up @protocol references\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Realize non-lazy classes (for +load methods and static instances)</span></span><br><span class=\"line\">    <span class=\"comment\">// 实现非懒加载类</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">        classref_t *classlist = </span><br><span class=\"line\">            _getObjc2NonlazyClassList(hi, &amp;count);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">            Class cls = remapClass(classlist[i]);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!cls) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// hack for class __ARCLite__, which didn't get this above</span></span><br><span class=\"line\"><span class=\"meta\">#if TARGET_OS_SIMULATOR</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cls-&gt;cache._buckets == (<span class=\"keyword\">void</span>*)&amp;_objc_empty_cache  &amp;&amp;  </span><br><span class=\"line\">                (cls-&gt;cache._mask  ||  cls-&gt;cache._occupied)) </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cls-&gt;cache._mask = <span class=\"number\">0</span>;</span><br><span class=\"line\">                cls-&gt;cache._occupied = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cls-&gt;ISA()-&gt;cache._buckets == (<span class=\"keyword\">void</span>*)&amp;_objc_empty_cache  &amp;&amp;  </span><br><span class=\"line\">                (cls-&gt;ISA()-&gt;cache._mask  ||  cls-&gt;ISA()-&gt;cache._occupied)) </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                cls-&gt;ISA()-&gt;cache._mask = <span class=\"number\">0</span>;</span><br><span class=\"line\">                cls-&gt;ISA()-&gt;cache._occupied = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"><span class=\"meta\">#endif</span></span><br><span class=\"line\">            </span><br><span class=\"line\">            addClassTableEntry(cls);</span><br><span class=\"line\">            realizeClass(cls);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ts.log(<span class=\"string\">\"IMAGE TIMES: realize non-lazy classes\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Realize newly-resolved future classes, in case CF manipulates them</span></span><br><span class=\"line\">    <span class=\"comment\">// 实现所有懒加载类</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (resolvedFutureClasses) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; resolvedFutureClassCount; i++) &#123;</span><br><span class=\"line\">            realizeClass(resolvedFutureClasses[i]);</span><br><span class=\"line\">            resolvedFutureClasses[i]-&gt;setInstancesRequireRawIsa(<span class=\"literal\">false</span><span class=\"comment\">/*inherited*/</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        free(resolvedFutureClasses);</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\"></span><br><span class=\"line\">    ts.log(<span class=\"string\">\"IMAGE TIMES: realize future classes\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Discover categories.</span></span><br><span class=\"line\">    <span class=\"comment\">// 处理所有分类</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 外部循环遍历找到当前类，查找对应分类数组</span></span><br><span class=\"line\">        category_t **catlist = </span><br><span class=\"line\">            _getObjc2CategoryList(hi, &amp;count);</span><br><span class=\"line\">        <span class=\"keyword\">bool</span> hasClassProperties = hi-&gt;info()-&gt;hasCategoryClassProperties();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 内部循环遍历当前类所有分类</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">            category_t *cat = catlist[i];</span><br><span class=\"line\">            Class cls = remapClass(cat-&gt;cls);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!cls) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// Category's target class is missing (probably weak-linked).</span></span><br><span class=\"line\">                <span class=\"comment\">// Disavow any knowledge of this category.</span></span><br><span class=\"line\">                catlist[i] = <span class=\"literal\">nil</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (PrintConnecting) &#123;</span><br><span class=\"line\">                    _objc_inform(<span class=\"string\">\"CLASS: IGNORING category \\?\\?\\?(%s) %p with \"</span></span><br><span class=\"line\">                                 <span class=\"string\">\"missing weak-linked target class\"</span>, </span><br><span class=\"line\">                                 cat-&gt;name, cat);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// Process this category. </span></span><br><span class=\"line\">            <span class=\"comment\">// First, register the category with its target class. </span></span><br><span class=\"line\">            <span class=\"comment\">// Then, rebuild the class's method lists (etc) if </span></span><br><span class=\"line\">            <span class=\"comment\">// the class is realized.</span></span><br><span class=\"line\">            <span class=\"comment\">// 首先通过其所属的类注册分类，如果该类已经被实现，则重新构造方法列表</span></span><br><span class=\"line\">            <span class=\"keyword\">bool</span> classExists = <span class=\"literal\">NO</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cat-&gt;instanceMethods ||  cat-&gt;protocols  </span><br><span class=\"line\">                ||  cat-&gt;instanceProperties) </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 将分类添加到对应Class的分类数组中</span></span><br><span class=\"line\">                addUnattachedCategoryForClass(cat, cls, hi);</span><br><span class=\"line\">                <span class=\"comment\">// 将分类中的属性、方法、协议添加到类中</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (cls-&gt;isRealized()) &#123;</span><br><span class=\"line\">                    remethodizeClass(cls);</span><br><span class=\"line\">                    classExists = <span class=\"literal\">YES</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (PrintConnecting) &#123;</span><br><span class=\"line\">                    _objc_inform(<span class=\"string\">\"CLASS: found category -%s(%s) %s\"</span>, </span><br><span class=\"line\">                                 cls-&gt;nameForLogging(), cat-&gt;name, </span><br><span class=\"line\">                                 classExists ? <span class=\"string\">\"on existing class\"</span> : <span class=\"string\">\"\"</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 元类操作</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cat-&gt;classMethods  ||  cat-&gt;protocols  </span><br><span class=\"line\">                ||  (hasClassProperties &amp;&amp; cat-&gt;_classProperties)) </span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                addUnattachedCategoryForClass(cat, cls-&gt;ISA(), hi);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (cls-&gt;ISA()-&gt;isRealized()) &#123;</span><br><span class=\"line\">                    remethodizeClass(cls-&gt;ISA());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (PrintConnecting) &#123;</span><br><span class=\"line\">                    _objc_inform(<span class=\"string\">\"CLASS: found category +%s(%s)\"</span>, </span><br><span class=\"line\">                                 cls-&gt;nameForLogging(), cat-&gt;name);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    ts.log(<span class=\"string\">\"IMAGE TIMES: discover categories\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Category discovery MUST BE LAST to avoid potential races </span></span><br><span class=\"line\">    <span class=\"comment\">// when other threads call the new category code before </span></span><br><span class=\"line\">    <span class=\"comment\">// this thread finishes its fixups.</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// +load handled by prepare_load_methods()</span></span><br><span class=\"line\">    <span class=\"comment\">// 初始化从磁盘中加载的所有类</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (DebugNonFragileIvars) &#123;</span><br><span class=\"line\">        realizeAllClasses();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Print preoptimization statistics</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (PrintPreopt) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> PreoptTotalMethodLists;</span><br><span class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> PreoptOptimizedMethodLists;</span><br><span class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> PreoptTotalClasses;</span><br><span class=\"line\">        <span class=\"keyword\">static</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> PreoptOptimizedClasses;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (EACH_HEADER) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (hi-&gt;isPreoptimized()) &#123;</span><br><span class=\"line\">                _objc_inform(<span class=\"string\">\"PREOPTIMIZATION: honoring preoptimized selectors \"</span></span><br><span class=\"line\">                             <span class=\"string\">\"in %s\"</span>, hi-&gt;fname());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (hi-&gt;info()-&gt;optimizedByDyld()) &#123;</span><br><span class=\"line\">                _objc_inform(<span class=\"string\">\"PREOPTIMIZATION: IGNORING preoptimized selectors \"</span></span><br><span class=\"line\">                             <span class=\"string\">\"in %s\"</span>, hi-&gt;fname());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            classref_t *classlist = _getObjc2ClassList(hi, &amp;count);</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; count; i++) &#123;</span><br><span class=\"line\">                Class cls = remapClass(classlist[i]);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!cls) <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                PreoptTotalClasses++;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (hi-&gt;isPreoptimized()) &#123;</span><br><span class=\"line\">                    PreoptOptimizedClasses++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"keyword\">const</span> method_list_t *mlist;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((mlist = ((class_ro_t *)cls-&gt;data())-&gt;baseMethods())) &#123;</span><br><span class=\"line\">                    PreoptTotalMethodLists++;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mlist-&gt;isFixedUp()) &#123;</span><br><span class=\"line\">                        PreoptOptimizedMethodLists++;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((mlist=((class_ro_t *)cls-&gt;ISA()-&gt;data())-&gt;baseMethods())) &#123;</span><br><span class=\"line\">                    PreoptTotalMethodLists++;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mlist-&gt;isFixedUp()) &#123;</span><br><span class=\"line\">                        PreoptOptimizedMethodLists++;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        _objc_inform(<span class=\"string\">\"PREOPTIMIZATION: %zu selector references not \"</span></span><br><span class=\"line\">                     <span class=\"string\">\"pre-optimized\"</span>, UnfixedSelectors);</span><br><span class=\"line\">        _objc_inform(<span class=\"string\">\"PREOPTIMIZATION: %u/%u (%.3g%%) method lists pre-sorted\"</span>,</span><br><span class=\"line\">                     PreoptOptimizedMethodLists, PreoptTotalMethodLists, </span><br><span class=\"line\">                     PreoptTotalMethodLists</span><br><span class=\"line\">                     ? <span class=\"number\">100.0</span>*PreoptOptimizedMethodLists/PreoptTotalMethodLists </span><br><span class=\"line\">                     : <span class=\"number\">0.0</span>);</span><br><span class=\"line\">        _objc_inform(<span class=\"string\">\"PREOPTIMIZATION: %u/%u (%.3g%%) classes pre-registered\"</span>,</span><br><span class=\"line\">                     PreoptOptimizedClasses, PreoptTotalClasses, </span><br><span class=\"line\">                     PreoptTotalClasses </span><br><span class=\"line\">                     ? <span class=\"number\">100.0</span>*PreoptOptimizedClasses/PreoptTotalClasses</span><br><span class=\"line\">                     : <span class=\"number\">0.0</span>);</span><br><span class=\"line\">        _objc_inform(<span class=\"string\">\"PREOPTIMIZATION: %zu protocol references not \"</span></span><br><span class=\"line\">                     <span class=\"string\">\"pre-optimized\"</span>, UnfixedProtocolReferences);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#undef EACH_HEADER</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在<code>_read_images</code>函数中会先取得当前类的所有分类数组，并遍历数组将每个<code>category_t</code>对象去除，再通过<code>addUnattachedCategoryForClass()</code>方法将分类中的属性、方法、协议添加到分类哈希表中</p>\n<h3 id=\"方法覆盖\">方法覆盖<a href=\"post/iOS-runtime-node-7#方法覆盖\"></a></h3><p>在分类中重复定义当前类方法会覆盖当前类的方法，原类和分类的方法都会存在当前类的方法列表中，只是存在顺序不同</p>\n<p>在方法调用的时候会优先查找<code>Category</code>中的方法，也就是分类方法会被优先调用，而方法找到后就不回继续查找，所以方法被覆盖</p>\n","prev":{"title":"多线程","slug":"iOS-多线程简介"},"next":{"title":"Runtime(六) 可调试的objc4-750.1","slug":"iOS-runtime-node-6"},"link":"https://vesincc.github.io/post/iOS-runtime-node-7/","toc":[{"title":"Category","id":"Category","index":"1","children":[{"title":"map_images","id":"map-images","index":"1.1"},{"title":"方法覆盖","id":"方法覆盖","index":"1.2"}]}],"reward":true,"copyright":{"custom":"本文遵守 CC BY-NC-ND 4.0 请保持转载后文章内容的完整，以及文章出处。本人保留所有版权相关权利。"}}